{
    "type": [
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "lines(density(sse_coxrfx),col=\"red\")",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\"_sumSqErrDbn.pdf\"),width = 4,height = 4)",
        "> ",
        "plot(density(sse_coxph),main=\"\",xlab = \"sum of squared errors\",ylab=\"estimated density\")",
        "> ",
        "lines(density(sse_coxrfx),col=\"red\")",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\"_sumSqErrDbn.pdf\"),width = 4,height = 4)",
        "> ",
        "plot(density(sse_coxrfx),main=\"\",xlab = \"sum of squared errors\",ylab=\"estimated density\",col=\"red\")",
        "> ",
        "lines(density(sse_coxph))",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "set.seed(231178)",
        "> ",
        "library(flexsurv)",
        "> ",
        "library(mvtnorm)",
        "> ",
        "library(ebsurv)",
        "> ",
        "",
        "> ",
        "setwd(\"/Users/ruibarrigana/Library/Mobile Documents/com~apple~CloudDocs/RWORK/ebsurv code/code\")",
        "> ",
        "n<-250 # nr of patients",
        "> ",
        "covariate_names<-paste0(\"Cov\",1:5)",
        "> ",
        "nGroups<-1/3 #number of groups per transition",
        "> ",
        "nParam<-3*length(covariate_names)",
        "> ",
        "nr_simulated_data_sets<-500",
        "> ",
        "#param<-rnorm(n = nParam,mean = -0.2,sd = 0.5)",
        "> ",
        "#param<-rep(seq(-0.5,1,length.out = length(covariate_names)),3)",
        "> ",
        "param<-runif(n=nParam,min = -0.5,max = 1)",
        "> ",
        "file1<-\"../data/coxph_vs_coxrfx_sim_illness_death_250obs_1group_for_all_trans_5vars_each_group_500sets_dfMethod_unifParams_allHyperParams.Rdata\"",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#mse comparison ",
        "> ",
        "load(file1)",
        "> ",
        "#reorder matrix of estimates",
        "> ",
        "coefficient_estimates<-coefficient_estimates[,c(seq(1,ncol(coefficient_estimates),3),seq(2,ncol(coefficient_estimates),3),seq(3,ncol(coefficient_estimates),3))]",
        "> ",
        "coefficient_estimates_coxph<-coefficient_estimates_coxph[,c(seq(1,ncol(coefficient_estimates),3),seq(2,ncol(coefficient_estimates),3),seq(3,ncol(coefficient_estimates),3))]",
        "> ",
        "",
        "> ",
        "  ",
        "> ",
        "#errors",
        "> ",
        "errors_coxrfx<-t(coefficient_estimates)-param",
        "> ",
        "errors_coxph<-t(coefficient_estimates_coxph)-param",
        "> ",
        "",
        "> ",
        "#sse",
        "> ",
        "sse_coxrfx<-apply(errors_coxrfx^2,2,sum,na.rm=T)",
        "> ",
        "sse_coxph<-apply(errors_coxph^2,2,sum,na.rm=T)",
        "> ",
        "median(sse_coxrfx/sse_coxph)",
        "[1] 0.6409716\n",
        "> ",
        "file2<-strsplit(file1,\"/data/\")[[1]][2]",
        "> ",
        "file3<-strsplit(file2,\".Rdata\")",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\".pdf\"))",
        "> ",
        "plot(density(sse_coxrfx/sse_coxph,from = 0,kernel = \"gaussian\",na.rm = T),main=\"\",ylab =\"density\",xlab=\"sse_coxrfx/sse_coxph\",xlim=c(0,5))",
        "> ",
        "abline(v=1,col=\"red\",lty=2)",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#plots",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\"_CoefEstimates.pdf\"),width = 4,height = 4)",
        "> ",
        "plot(param,apply(coefficient_estimates_coxph,2,mean,na.rm=T),main = \"\",xlab = \"true params\",ylab = \"mean estimate\")",
        "> ",
        "abline(a=0,b=1)",
        "> ",
        "points(param,apply(coefficient_estimates,2,mean,na.rm=T),col=\"red\")",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\"_sumSqErrDbn.pdf\"),width = 4,height = 4)",
        "> ",
        "plot(density(sse_coxrfx),main=\"\",xlab = \"sum of squared errors\",ylab=\"estimated density\",col=\"red\")",
        "> ",
        "lines(density(sse_coxph))",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "set.seed(231178)",
        "> ",
        "library(flexsurv)",
        "> ",
        "library(mvtnorm)",
        "> ",
        "library(ebsurv)",
        "> ",
        "",
        "> ",
        "setwd(\"/Users/ruibarrigana/Library/Mobile Documents/com~apple~CloudDocs/RWORK/ebsurv code/code\")",
        "> ",
        "n<-250 # nr of patients",
        "> ",
        "covariate_names<-paste0(\"Cov\",1:10)",
        "> ",
        "nGroups<-1/3 #number of groups per transition",
        "> ",
        "nParam<-3*length(covariate_names)",
        "> ",
        "nr_simulated_data_sets<-500",
        "> ",
        "#param<-rnorm(n = nParam,mean = -0.2,sd = 0.5)",
        "> ",
        "#param<-rep(seq(-0.5,1,length.out = length(covariate_names)),3)",
        "> ",
        "param<-runif(n=nParam,min = -0.5,max = 1)",
        "> ",
        "file1<-\"../data/coxph_vs_coxrfx_sim_illness_death_250obs_1group_for_all_trans_10vars_each_group_500sets_dfMethod_unifParams_allHyperParams.Rdata\"",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#mse comparison ",
        "> ",
        "load(file1)",
        "> ",
        "#reorder matrix of estimates",
        "> ",
        "coefficient_estimates<-coefficient_estimates[,c(seq(1,ncol(coefficient_estimates),3),seq(2,ncol(coefficient_estimates),3),seq(3,ncol(coefficient_estimates),3))]",
        "> ",
        "coefficient_estimates_coxph<-coefficient_estimates_coxph[,c(seq(1,ncol(coefficient_estimates),3),seq(2,ncol(coefficient_estimates),3),seq(3,ncol(coefficient_estimates),3))]",
        "> ",
        "",
        "> ",
        "  ",
        "> ",
        "#errors",
        "> ",
        "errors_coxrfx<-t(coefficient_estimates)-param",
        "> ",
        "errors_coxph<-t(coefficient_estimates_coxph)-param",
        "> ",
        "",
        "> ",
        "#sse",
        "> ",
        "sse_coxrfx<-apply(errors_coxrfx^2,2,sum,na.rm=T)",
        "> ",
        "sse_coxph<-apply(errors_coxph^2,2,sum,na.rm=T)",
        "> ",
        "median(sse_coxrfx/sse_coxph)",
        "[1] 0.4930718\n",
        "> ",
        "file2<-strsplit(file1,\"/data/\")[[1]][2]",
        "> ",
        "file3<-strsplit(file2,\".Rdata\")",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\".pdf\"))",
        "> ",
        "plot(density(sse_coxrfx/sse_coxph,from = 0,kernel = \"gaussian\",na.rm = T),main=\"\",ylab =\"density\",xlab=\"sse_coxrfx/sse_coxph\",xlim=c(0,5))",
        "> ",
        "abline(v=1,col=\"red\",lty=2)",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#plots",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\"_CoefEstimates.pdf\"),width = 4,height = 4)",
        "> ",
        "plot(param,apply(coefficient_estimates_coxph,2,mean,na.rm=T),main = \"\",xlab = \"true params\",ylab = \"mean estimate\")",
        "> ",
        "abline(a=0,b=1)",
        "> ",
        "points(param,apply(coefficient_estimates,2,mean,na.rm=T),col=\"red\")",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\"_sumSqErrDbn.pdf\"),width = 4,height = 4)",
        "> ",
        "plot(density(sse_coxrfx),main=\"\",xlab = \"sum of squared errors\",ylab=\"estimated density\",col=\"red\")",
        "> ",
        "lines(density(sse_coxph))",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "set.seed(231178)",
        "> ",
        "library(flexsurv)",
        "> ",
        "library(mvtnorm)",
        "> ",
        "library(ebsurv)",
        "> ",
        "",
        "> ",
        "setwd(\"/Users/ruibarrigana/Library/Mobile Documents/com~apple~CloudDocs/RWORK/ebsurv code/code\")",
        "> ",
        "n<-250 # nr of patients",
        "> ",
        "covariate_names<-paste0(\"Cov\",1:10)",
        "> ",
        "nGroups<-1/3 #number of groups per transition",
        "> ",
        "nParam<-3*length(covariate_names)",
        "> ",
        "nr_simulated_data_sets<-500",
        "> ",
        "#param<-rnorm(n = nParam,mean = -0.2,sd = 0.5)",
        "> ",
        "#param<-rep(seq(-0.5,1,length.out = length(covariate_names)),3)",
        "> ",
        "param<-runif(n=nParam,min = -0.5,max = 1)",
        "> ",
        "file1<-\"../data/coxph_vs_coxrfx_sim_illness_death_250obs_1group_for_all_trans_1vars_each_group_500sets_dfMethod_unifParams_noHyperMeans.Rdata\"",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#mse comparison ",
        "> ",
        "load(file1)",
        "> ",
        "#reorder matrix of estimates",
        "> ",
        "coefficient_estimates<-coefficient_estimates[,c(seq(1,ncol(coefficient_estimates),3),seq(2,ncol(coefficient_estimates),3),seq(3,ncol(coefficient_estimates),3))]",
        "> ",
        "coefficient_estimates_coxph<-coefficient_estimates_coxph[,c(seq(1,ncol(coefficient_estimates),3),seq(2,ncol(coefficient_estimates),3),seq(3,ncol(coefficient_estimates),3))]",
        "> ",
        "",
        "> ",
        "  ",
        "> ",
        "#errors",
        "> ",
        "errors_coxrfx<-t(coefficient_estimates)-param",
        "> ",
        "errors_coxph<-t(coefficient_estimates_coxph)-param",
        "> ",
        "",
        "> ",
        "#sse",
        "> ",
        "sse_coxrfx<-apply(errors_coxrfx^2,2,sum,na.rm=T)",
        "> ",
        "sse_coxph<-apply(errors_coxph^2,2,sum,na.rm=T)",
        "> ",
        "median(sse_coxrfx/sse_coxph)",
        "[1] 0.8891283\n",
        "> ",
        "file2<-strsplit(file1,\"/data/\")[[1]][2]",
        "> ",
        "file3<-strsplit(file2,\".Rdata\")",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\".pdf\"))",
        "> ",
        "plot(density(sse_coxrfx/sse_coxph,from = 0,kernel = \"gaussian\",na.rm = T),main=\"\",ylab =\"density\",xlab=\"sse_coxrfx/sse_coxph\",xlim=c(0,5))",
        "> ",
        "abline(v=1,col=\"red\",lty=2)",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#plots",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\"_CoefEstimates.pdf\"),width = 4,height = 4)",
        "> ",
        "plot(param,apply(coefficient_estimates_coxph,2,mean,na.rm=T),main = \"\",xlab = \"true params\",ylab = \"mean estimate\")",
        "> ",
        "abline(a=0,b=1)",
        "> ",
        "points(param,apply(coefficient_estimates,2,mean,na.rm=T),col=\"red\")",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\"_sumSqErrDbn.pdf\"),width = 4,height = 4)",
        "> ",
        "plot(density(sse_coxrfx),main=\"\",xlab = \"sum of squared errors\",ylab=\"estimated density\",col=\"red\")",
        "> ",
        "lines(density(sse_coxph))",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "set.seed(231178)",
        "> ",
        "library(flexsurv)",
        "> ",
        "library(mvtnorm)",
        "> ",
        "library(ebsurv)",
        "> ",
        "",
        "> ",
        "setwd(\"/Users/ruibarrigana/Library/Mobile Documents/com~apple~CloudDocs/RWORK/ebsurv code/code\")",
        "> ",
        "n<-250 # nr of patients",
        "> ",
        "covariate_names<-paste0(\"Cov\",1:10)",
        "> ",
        "nGroups<-1/3 #number of groups per transition",
        "> ",
        "nParam<-3*length(covariate_names)",
        "> ",
        "nr_simulated_data_sets<-500",
        "> ",
        "#param<-rnorm(n = nParam,mean = -0.2,sd = 0.5)",
        "> ",
        "#param<-rep(seq(-0.5,1,length.out = length(covariate_names)),3)",
        "> ",
        "param<-runif(n=nParam,min = -0.5,max = 1)",
        "> ",
        "file1<-\"../data/coxph_vs_coxrfx_sim_illness_death_250obs_1group_for_all_trans_3vars_each_group_500sets_dfMethod_unifParams_noHyperMeans.Rdata\"",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#mse comparison ",
        "> ",
        "load(file1)",
        "> ",
        "#reorder matrix of estimates",
        "> ",
        "coefficient_estimates<-coefficient_estimates[,c(seq(1,ncol(coefficient_estimates),3),seq(2,ncol(coefficient_estimates),3),seq(3,ncol(coefficient_estimates),3))]",
        "> ",
        "coefficient_estimates_coxph<-coefficient_estimates_coxph[,c(seq(1,ncol(coefficient_estimates),3),seq(2,ncol(coefficient_estimates),3),seq(3,ncol(coefficient_estimates),3))]",
        "> ",
        "",
        "> ",
        "  ",
        "> ",
        "#errors",
        "> ",
        "errors_coxrfx<-t(coefficient_estimates)-param",
        "> ",
        "errors_coxph<-t(coefficient_estimates_coxph)-param",
        "> ",
        "",
        "> ",
        "#sse",
        "> ",
        "sse_coxrfx<-apply(errors_coxrfx^2,2,sum,na.rm=T)",
        "> ",
        "sse_coxph<-apply(errors_coxph^2,2,sum,na.rm=T)",
        "> ",
        "median(sse_coxrfx/sse_coxph)",
        "[1] 0.7057479\n",
        "> ",
        "file2<-strsplit(file1,\"/data/\")[[1]][2]",
        "> ",
        "file3<-strsplit(file2,\".Rdata\")",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\".pdf\"))",
        "> ",
        "plot(density(sse_coxrfx/sse_coxph,from = 0,kernel = \"gaussian\",na.rm = T),main=\"\",ylab =\"density\",xlab=\"sse_coxrfx/sse_coxph\",xlim=c(0,5))",
        "> ",
        "abline(v=1,col=\"red\",lty=2)",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#plots",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\"_CoefEstimates.pdf\"),width = 4,height = 4)",
        "> ",
        "plot(param,apply(coefficient_estimates_coxph,2,mean,na.rm=T),main = \"\",xlab = \"true params\",ylab = \"mean estimate\")",
        "> ",
        "abline(a=0,b=1)",
        "> ",
        "points(param,apply(coefficient_estimates,2,mean,na.rm=T),col=\"red\")",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\"_sumSqErrDbn.pdf\"),width = 4,height = 4)",
        "> ",
        "plot(density(sse_coxrfx),main=\"\",xlab = \"sum of squared errors\",ylab=\"estimated density\",col=\"red\")",
        "> ",
        "lines(density(sse_coxph))",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "set.seed(231178)",
        "> ",
        "library(flexsurv)",
        "> ",
        "library(mvtnorm)",
        "> ",
        "library(ebsurv)",
        "> ",
        "",
        "> ",
        "setwd(\"/Users/ruibarrigana/Library/Mobile Documents/com~apple~CloudDocs/RWORK/ebsurv code/code\")",
        "> ",
        "n<-250 # nr of patients",
        "> ",
        "covariate_names<-paste0(\"Cov\",1:10)",
        "> ",
        "nGroups<-1/3 #number of groups per transition",
        "> ",
        "nParam<-3*length(covariate_names)",
        "> ",
        "nr_simulated_data_sets<-500",
        "> ",
        "#param<-rnorm(n = nParam,mean = -0.2,sd = 0.5)",
        "> ",
        "#param<-rep(seq(-0.5,1,length.out = length(covariate_names)),3)",
        "> ",
        "param<-runif(n=nParam,min = -0.5,max = 1)",
        "> ",
        "file1<-\"../data/coxph_vs_coxrfx_sim_illness_death_250obs_1group_for_all_trans_5vars_each_group_500sets_dfMethod_unifParams_noHyperMeans.Rdata\"",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#mse comparison ",
        "> ",
        "load(file1)",
        "> ",
        "#reorder matrix of estimates",
        "> ",
        "coefficient_estimates<-coefficient_estimates[,c(seq(1,ncol(coefficient_estimates),3),seq(2,ncol(coefficient_estimates),3),seq(3,ncol(coefficient_estimates),3))]",
        "> ",
        "coefficient_estimates_coxph<-coefficient_estimates_coxph[,c(seq(1,ncol(coefficient_estimates),3),seq(2,ncol(coefficient_estimates),3),seq(3,ncol(coefficient_estimates),3))]",
        "> ",
        "",
        "> ",
        "  ",
        "> ",
        "#errors",
        "> ",
        "errors_coxrfx<-t(coefficient_estimates)-param",
        "> ",
        "errors_coxph<-t(coefficient_estimates_coxph)-param",
        "> ",
        "",
        "> ",
        "#sse",
        "> ",
        "sse_coxrfx<-apply(errors_coxrfx^2,2,sum,na.rm=T)",
        "> ",
        "sse_coxph<-apply(errors_coxph^2,2,sum,na.rm=T)",
        "> ",
        "median(sse_coxrfx/sse_coxph)",
        "[1] 0.6160459\n",
        "> ",
        "file2<-strsplit(file1,\"/data/\")[[1]][2]",
        "> ",
        "file3<-strsplit(file2,\".Rdata\")",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\".pdf\"))",
        "> ",
        "plot(density(sse_coxrfx/sse_coxph,from = 0,kernel = \"gaussian\",na.rm = T),main=\"\",ylab =\"density\",xlab=\"sse_coxrfx/sse_coxph\",xlim=c(0,5))",
        "> ",
        "abline(v=1,col=\"red\",lty=2)",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#plots",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\"_CoefEstimates.pdf\"),width = 4,height = 4)",
        "> ",
        "plot(param,apply(coefficient_estimates_coxph,2,mean,na.rm=T),main = \"\",xlab = \"true params\",ylab = \"mean estimate\")",
        "> ",
        "abline(a=0,b=1)",
        "> ",
        "points(param,apply(coefficient_estimates,2,mean,na.rm=T),col=\"red\")",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\"_sumSqErrDbn.pdf\"),width = 4,height = 4)",
        "> ",
        "plot(density(sse_coxrfx),main=\"\",xlab = \"sum of squared errors\",ylab=\"estimated density\",col=\"red\")",
        "> ",
        "lines(density(sse_coxph))",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "set.seed(231178)",
        "> ",
        "library(flexsurv)",
        "> ",
        "library(mvtnorm)",
        "> ",
        "library(ebsurv)",
        "> ",
        "",
        "> ",
        "setwd(\"/Users/ruibarrigana/Library/Mobile Documents/com~apple~CloudDocs/RWORK/ebsurv code/code\")",
        "> ",
        "n<-250 # nr of patients",
        "> ",
        "covariate_names<-paste0(\"Cov\",1:10)",
        "> ",
        "nGroups<-1/3 #number of groups per transition",
        "> ",
        "nParam<-3*length(covariate_names)",
        "> ",
        "nr_simulated_data_sets<-500",
        "> ",
        "#param<-rnorm(n = nParam,mean = -0.2,sd = 0.5)",
        "> ",
        "#param<-rep(seq(-0.5,1,length.out = length(covariate_names)),3)",
        "> ",
        "param<-runif(n=nParam,min = -0.5,max = 1)",
        "> ",
        "file1<-\"../data/coxph_vs_coxrfx_sim_illness_death_250obs_1group_for_all_trans_10vars_each_group_500sets_dfMethod_unifParams_noHyperMeans.Rdata\"",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#mse comparison ",
        "> ",
        "load(file1)",
        "> ",
        "#reorder matrix of estimates",
        "> ",
        "coefficient_estimates<-coefficient_estimates[,c(seq(1,ncol(coefficient_estimates),3),seq(2,ncol(coefficient_estimates),3),seq(3,ncol(coefficient_estimates),3))]",
        "> ",
        "coefficient_estimates_coxph<-coefficient_estimates_coxph[,c(seq(1,ncol(coefficient_estimates),3),seq(2,ncol(coefficient_estimates),3),seq(3,ncol(coefficient_estimates),3))]",
        "> ",
        "",
        "> ",
        "  ",
        "> ",
        "#errors",
        "> ",
        "errors_coxrfx<-t(coefficient_estimates)-param",
        "> ",
        "errors_coxph<-t(coefficient_estimates_coxph)-param",
        "> ",
        "",
        "> ",
        "#sse",
        "> ",
        "sse_coxrfx<-apply(errors_coxrfx^2,2,sum,na.rm=T)",
        "> ",
        "sse_coxph<-apply(errors_coxph^2,2,sum,na.rm=T)",
        "> ",
        "median(sse_coxrfx/sse_coxph)",
        "[1] 0.5463724\n",
        "> ",
        "file2<-strsplit(file1,\"/data/\")[[1]][2]",
        "> ",
        "file3<-strsplit(file2,\".Rdata\")",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\".pdf\"))",
        "> ",
        "plot(density(sse_coxrfx/sse_coxph,from = 0,kernel = \"gaussian\",na.rm = T),main=\"\",ylab =\"density\",xlab=\"sse_coxrfx/sse_coxph\",xlim=c(0,5))",
        "> ",
        "abline(v=1,col=\"red\",lty=2)",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#plots",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\"_CoefEstimates.pdf\"),width = 4,height = 4)",
        "> ",
        "plot(param,apply(coefficient_estimates_coxph,2,mean,na.rm=T),main = \"\",xlab = \"true params\",ylab = \"mean estimate\")",
        "> ",
        "abline(a=0,b=1)",
        "> ",
        "points(param,apply(coefficient_estimates,2,mean,na.rm=T),col=\"red\")",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\"_sumSqErrDbn.pdf\"),width = 4,height = 4)",
        "> ",
        "plot(density(sse_coxrfx),main=\"\",xlab = \"sum of squared errors\",ylab=\"estimated density\",col=\"red\")",
        "> ",
        "lines(density(sse_coxph))",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\"_sumSqErrDbn.pdf\"),width = 4,height = 4)",
        "> ",
        "plot(density(sse_coxrfx),main=\"\",xlab = \"sum of squared errors\",ylab=\"estimated density\",col=\"red\",xlim=c(0,3.5))",
        "> ",
        "lines(density(sse_coxph))",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "set.seed(231178)",
        "> ",
        "library(flexsurv)",
        "> ",
        "library(mvtnorm)",
        "> ",
        "library(ebsurv)",
        "> ",
        "",
        "> ",
        "setwd(\"/Users/ruibarrigana/Library/Mobile Documents/com~apple~CloudDocs/RWORK/ebsurv code/code\")",
        "> ",
        "n<-250 # nr of patients",
        "> ",
        "covariate_names<-paste0(\"Cov\",1:10)",
        "> ",
        "nGroups<-1/3 #number of groups per transition",
        "> ",
        "nParam<-3*length(covariate_names)",
        "> ",
        "nr_simulated_data_sets<-500",
        "> ",
        "#param<-rnorm(n = nParam,mean = -0.2,sd = 0.5)",
        "> ",
        "#param<-rep(seq(-0.5,1,length.out = length(covariate_names)),3)",
        "> ",
        "param<-runif(n=nParam,min = -0.5,max = 1)",
        "> ",
        "file1<-\"../data/coxph_vs_coxrfx_sim_illness_death_250obs_1group_for_all_trans_10vars_each_group_500sets_dfMethod_unifParams_allHyperParams.Rdata\"",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#mse comparison ",
        "> ",
        "load(file1)",
        "> ",
        "#reorder matrix of estimates",
        "> ",
        "coefficient_estimates<-coefficient_estimates[,c(seq(1,ncol(coefficient_estimates),3),seq(2,ncol(coefficient_estimates),3),seq(3,ncol(coefficient_estimates),3))]",
        "> ",
        "coefficient_estimates_coxph<-coefficient_estimates_coxph[,c(seq(1,ncol(coefficient_estimates),3),seq(2,ncol(coefficient_estimates),3),seq(3,ncol(coefficient_estimates),3))]",
        "> ",
        "",
        "> ",
        "  ",
        "> ",
        "#errors",
        "> ",
        "errors_coxrfx<-t(coefficient_estimates)-param",
        "> ",
        "errors_coxph<-t(coefficient_estimates_coxph)-param",
        "> ",
        "",
        "> ",
        "#sse",
        "> ",
        "sse_coxrfx<-apply(errors_coxrfx^2,2,sum,na.rm=T)",
        "> ",
        "sse_coxph<-apply(errors_coxph^2,2,sum,na.rm=T)",
        "> ",
        "median(sse_coxrfx/sse_coxph)",
        "[1] 0.4930718\n",
        "> ",
        "file2<-strsplit(file1,\"/data/\")[[1]][2]",
        "> ",
        "file3<-strsplit(file2,\".Rdata\")",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\".pdf\"))",
        "> ",
        "plot(density(sse_coxrfx/sse_coxph,from = 0,kernel = \"gaussian\",na.rm = T),main=\"\",ylab =\"density\",xlab=\"sse_coxrfx/sse_coxph\",xlim=c(0,5))",
        "> ",
        "abline(v=1,col=\"red\",lty=2)",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#plots",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\"_CoefEstimates.pdf\"),width = 4,height = 4)",
        "> ",
        "plot(param,apply(coefficient_estimates_coxph,2,mean,na.rm=T),main = \"\",xlab = \"true params\",ylab = \"mean estimate\")",
        "> ",
        "abline(a=0,b=1)",
        "> ",
        "points(param,apply(coefficient_estimates,2,mean,na.rm=T),col=\"red\")",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\"_sumSqErrDbn.pdf\"),width = 4,height = 4)",
        "> ",
        "plot(density(sse_coxrfx),main=\"\",xlab = \"sum of squared errors\",ylab=\"estimated density\",col=\"red\",xlim=c(0,3.5))",
        "> ",
        "lines(density(sse_coxph))",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "set.seed(231178)",
        "> ",
        "library(flexsurv)",
        "> ",
        "library(mvtnorm)",
        "> ",
        "library(ebsurv)",
        "> ",
        "",
        "> ",
        "setwd(\"/Users/ruibarrigana/Library/Mobile Documents/com~apple~CloudDocs/RWORK/ebsurv code/code\")",
        "> ",
        "n<-250 # nr of patients",
        "> ",
        "covariate_names<-paste0(\"Cov\",1:10)",
        "> ",
        "nGroups<-1/3 #number of groups per transition",
        "> ",
        "nParam<-3*length(covariate_names)",
        "> ",
        "nr_simulated_data_sets<-500",
        "> ",
        "#param<-rnorm(n = nParam,mean = -0.2,sd = 0.5)",
        "> ",
        "#param<-rep(seq(-0.5,1,length.out = length(covariate_names)),3)",
        "> ",
        "param<-runif(n=nParam,min = -0.5,max = 1)",
        "> ",
        "file1<-\"../data/coxph_vs_coxrfx_sim_illness_death_250obs_1group_for_all_trans_5vars_each_group_500sets_dfMethod_unifParams_allHyperParams.Rdata\"",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#mse comparison ",
        "> ",
        "load(file1)",
        "> ",
        "#reorder matrix of estimates",
        "> ",
        "coefficient_estimates<-coefficient_estimates[,c(seq(1,ncol(coefficient_estimates),3),seq(2,ncol(coefficient_estimates),3),seq(3,ncol(coefficient_estimates),3))]",
        "> ",
        "coefficient_estimates_coxph<-coefficient_estimates_coxph[,c(seq(1,ncol(coefficient_estimates),3),seq(2,ncol(coefficient_estimates),3),seq(3,ncol(coefficient_estimates),3))]",
        "> ",
        "",
        "> ",
        "  ",
        "> ",
        "#errors",
        "> ",
        "errors_coxrfx<-t(coefficient_estimates)-param",
        "> ",
        "errors_coxph<-t(coefficient_estimates_coxph)-param",
        "> ",
        "",
        "> ",
        "#sse",
        "> ",
        "sse_coxrfx<-apply(errors_coxrfx^2,2,sum,na.rm=T)",
        "> ",
        "sse_coxph<-apply(errors_coxph^2,2,sum,na.rm=T)",
        "> ",
        "median(sse_coxrfx/sse_coxph)",
        "[1] 0.6409716\n",
        "> ",
        "file2<-strsplit(file1,\"/data/\")[[1]][2]",
        "> ",
        "file3<-strsplit(file2,\".Rdata\")",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\".pdf\"))",
        "> ",
        "plot(density(sse_coxrfx/sse_coxph,from = 0,kernel = \"gaussian\",na.rm = T),main=\"\",ylab =\"density\",xlab=\"sse_coxrfx/sse_coxph\",xlim=c(0,5))",
        "> ",
        "abline(v=1,col=\"red\",lty=2)",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#plots",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\"_CoefEstimates.pdf\"),width = 4,height = 4)",
        "> ",
        "plot(param,apply(coefficient_estimates_coxph,2,mean,na.rm=T),main = \"\",xlab = \"true params\",ylab = \"mean estimate\")",
        "> ",
        "abline(a=0,b=1)",
        "> ",
        "points(param,apply(coefficient_estimates,2,mean,na.rm=T),col=\"red\")",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "pdf(paste0(\"../plots/\",file3,\"_sumSqErrDbn.pdf\"),width = 4,height = 4)",
        "> ",
        "plot(density(sse_coxrfx),main=\"\",xlab = \"sum of squared errors\",ylab=\"estimated density\",col=\"red\",xlim=c(0,2.5))",
        "> ",
        "lines(density(sse_coxph))",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "",
        "> ",
        "load(\"/Users/ruibarrigana/Downloads/multistage.RData\")",
        "> ",
        "View(data)",
        "> ",
        "load(\"/Users/ruibarrigana/Downloads/AMLSG_Clinical_Anon.RData\")",
        "> ",
        "names(clinicalData)",
        "  [1] \"Study\"                           \n  [2] \"PDID\"                            \n  [3] \"WHOcat\"                          \n  [4] \"TypeAML\"                         \n  [5] \"Type2\"                           \n  [6] \"C_Risk\"                          \n  [7] \"M_Risk\"                          \n  [8] \"NK\"                              \n  [9] \"AOD\"                             \n [10] \"Center\"                          \n [11] \"ERDate\"                          \n [12] \"Intergroup\"                      \n [13] \"Study1\"                          ",
        "\n [14] \"BaselineTherapy_\"                \n [15] \"VPA\"                             \n [16] \"ATRA_arm\"                        \n [17] \"TPL_o\"                           \n [18] \"TPL_type\"                        \n [19] \"Date_LF\"                         \n [20] \"TPL_Art\"                         \n [21] \"CR_date\"                         \n [22] \"Recurrence_date\"                 \n [23] \"TPL_date\"                        \n [24] \"TPL_Phase\"                       \n [25] \"Time_Diag_TPL\"                   \n [26] \"Time_1CR_TPL\"                    ",
        "\n [27] \"Family_donnor\"                   \n [28] \"Post_Induction_Therapy_Remission\"\n [29] \"Status\"                          \n [30] \"OS\"                              \n [31] \"EFSSTAT\"                         \n [32] \"ereignart\"                       \n [33] \"efs\"                             \n [34] \"rfsstat\"                         \n [35] \"rfs\"                             \n [36] \"cuminc\"                          \n [37] \"rfsstat_allo\"                    \n [38] \"rfs_allo\"                        \n [39] \"cuminc_allo\"                     ",
        "\n [40] \"HB\"                              \n [41] \"platelet\"                        \n [42] \"wbc\"                             \n [43] \"LDH\"                             \n [44] \"gender\"                          \n [45] \"BM_Blasts\"                       \n [46] \"Performance_ECOG\"                \n [47] \"PB_Blasts\"                       \n [48] \"Splenomegaly\"                    \n [49] \"MLL_PTD\"                         \n [50] \"inv3_t3_3\"                       \n [51] \"t_9_22\"                          \n [52] \"minus5_5q\"                       ",
        "\n [53] \"minus7\"                          \n [54] \"minus7q\"                         \n [55] \"abn7other\"                       \n [56] \"plus8_8q\"                        \n [57] \"minus9q\"                         \n [58] \"mono12_12p_abn12p\"               \n [59] \"plus13\"                          \n [60] \"mono17_17p_abn17p\"               \n [61] \"minus18_18q\"                     \n [62] \"minus20_20q\"                     \n [63] \"plus21\"                          \n [64] \"plus22\"                          \n [65] \"minusY\"                          ",
        "\n [66] \"t_15_17\"                         \n [67] \"t_8_21\"                          \n [68] \"inv16_t16_16\"                    \n [69] \"t_6_9\"                           \n [70] \"abn3q_other\"                     \n [71] \"plus11_11q\"                      \n [72] \"mono4_4q_abn4q\"                  \n [73] \"complex\"                         \n [74] \"NONC_CYTO\"                       \n [75] \"NALL_CYTO\"                       \n [76] \"X1\"                              \n [77] \"X2\"                              \n [78] \"X3\"                              ",
        "\n [79] \"X4\"                              \n [80] \"X5\"                              \n [81] \"X6\"                              \n [82] \"X7\"                              \n [83] \"X8\"                              \n [84] \"X9\"                              \n [85] \"X10\"                             \n [86] \"X11\"                             \n [87] \"X12\"                             \n [88] \"X13\"                             \n [89] \"X14\"                             \n [90] \"X15\"                             \n [91] \"X16\"                             ",
        "\n [92] \"X17\"                             \n [93] \"X18\"                             \n [94] \"X19\"                             \n [95] \"X20\"                             \n [96] \"X21\"                             \n [97] \"X22\"                             \n [98] \"X\"                               \n [99] \"Y\"                               \n[100] \"CEBPA\"                           \n[101] \"NPM1\"                            \n[102] \"FLT3_TKD\"                        \n[103] \"FLT3_ITD\"                        \n[104] \"FLT3_other\"                      ",
        "\n[105] \"t_9_11\"                          \n[106] \"t_v_11\"                          \n",
        "> ",
        "load(\"/Users/ruibarrigana/Downloads/multistage.RData\")",
        "> ",
        "load(\"/Users/ruibarrigana/Downloads/multistage.RData\")",
        "> ",
        "names(clinicalData)",
        "  [1] \"Study\"                           \n  [2] \"PDID\"                            \n  [3] \"WHOcat\"                          \n  [4] \"TypeAML\"                         \n  [5] \"Type2\"                           \n  [6] \"C_Risk\"                          \n  [7] \"M_Risk\"                          \n  [8] \"NK\"                              \n  [9] \"AOD\"                             \n [10] \"Center\"                          \n [11] \"ERDate\"                          \n [12] \"Intergroup\"                      \n [13] \"Study1\"                          ",
        "\n [14] \"BaselineTherapy_\"                \n [15] \"VPA\"                             \n [16] \"ATRA_arm\"                        \n [17] \"TPL_o\"                           \n [18] \"TPL_type\"                        \n [19] \"Date_LF\"                         \n [20] \"TPL_Art\"                         \n [21] \"CR_date\"                         \n [22] \"Recurrence_date\"                 \n [23] \"TPL_date\"                        \n [24] \"TPL_Phase\"                       \n [25] \"Time_Diag_TPL\"                   \n [26] \"Time_1CR_TPL\"                    ",
        "\n [27] \"Family_donnor\"                   \n [28] \"Post_Induction_Therapy_Remission\"\n [29] \"Status\"                          \n [30] \"OS\"                              \n [31] \"EFSSTAT\"                         \n [32] \"ereignart\"                       \n [33] \"efs\"                             \n [34] \"rfsstat\"                         \n [35] \"rfs\"                             \n [36] \"cuminc\"                          \n [37] \"rfsstat_allo\"                    \n [38] \"rfs_allo\"                        \n [39] \"cuminc_allo\"                     ",
        "\n [40] \"HB\"                              \n [41] \"platelet\"                        \n [42] \"wbc\"                             \n [43] \"LDH\"                             \n [44] \"gender\"                          \n [45] \"BM_Blasts\"                       \n [46] \"Performance_ECOG\"                \n [47] \"PB_Blasts\"                       \n [48] \"Splenomegaly\"                    \n [49] \"MLL_PTD\"                         \n [50] \"inv3_t3_3\"                       \n [51] \"t_9_22\"                          \n [52] \"minus5_5q\"                       ",
        "\n [53] \"minus7\"                          \n [54] \"minus7q\"                         \n [55] \"abn7other\"                       \n [56] \"plus8_8q\"                        \n [57] \"minus9q\"                         \n [58] \"mono12_12p_abn12p\"               \n [59] \"plus13\"                          \n [60] \"mono17_17p_abn17p\"               \n [61] \"minus18_18q\"                     \n [62] \"minus20_20q\"                     \n [63] \"plus21\"                          \n [64] \"plus22\"                          \n [65] \"minusY\"                          ",
        "\n [66] \"t_15_17\"                         \n [67] \"t_8_21\"                          \n [68] \"inv16_t16_16\"                    \n [69] \"t_6_9\"                           \n [70] \"abn3q_other\"                     \n [71] \"plus11_11q\"                      \n [72] \"mono4_4q_abn4q\"                  \n [73] \"complex\"                         \n [74] \"NONC_CYTO\"                       \n [75] \"NALL_CYTO\"                       \n [76] \"X1\"                              \n [77] \"X2\"                              \n [78] \"X3\"                              ",
        "\n [79] \"X4\"                              \n [80] \"X5\"                              \n [81] \"X6\"                              \n [82] \"X7\"                              \n [83] \"X8\"                              \n [84] \"X9\"                              \n [85] \"X10\"                             \n [86] \"X11\"                             \n [87] \"X12\"                             \n [88] \"X13\"                             \n [89] \"X14\"                             \n [90] \"X15\"                             \n [91] \"X16\"                             ",
        "\n [92] \"X17\"                             \n [93] \"X18\"                             \n [94] \"X19\"                             \n [95] \"X20\"                             \n [96] \"X21\"                             \n [97] \"X22\"                             \n [98] \"X\"                               \n [99] \"Y\"                               \n[100] \"CEBPA\"                           \n[101] \"NPM1\"                            \n[102] \"FLT3_TKD\"                        \n[103] \"FLT3_ITD\"                        \n[104] \"FLT3_other\"                      ",
        "\n[105] \"t_9_11\"                          \n[106] \"t_v_11\"                          \n",
        "> ",
        "?survival::concordance",
        "> ",
        "?coxph",
        "> ",
        "?survival::concordance",
        "> ",
        "?predict",
        "> ",
        "?createFolds",
        "No documentation for ‘createFolds’ in specified packages and libraries:\nyou could try ‘??createFolds’\n",
        "> ",
        "?predict",
        "> ",
        "",
        "> ",
        "survival::concordance",
        "function (object, ...) \nUseMethod(\"concordance\")\n<bytecode: 0x7ff77e0538c0>\n<environment: namespace:survival>\n",
        "> ",
        "?survival::concordance",
        "> ",
        "?survConcordance",
        "> ",
        "?save",
        "> ",
        "?mean",
        "> ",
        "402000-341700",
        "[1] 60300\n",
        "> ",
        "load(\"~/Downloads/multistage.RData\")",
        "> ",
        "?probtrans_ebsurv",
        "> ",
        "365.25*3",
        "[1] 1095.75\n",
        "> ",
        "?loo_ebsurv",
        "> ",
        "?probtrans_ebsurv",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "hh<-list()",
        "> ",
        "hh",
        "list()\n\nRestarting R session...\n\n"
    ]
}